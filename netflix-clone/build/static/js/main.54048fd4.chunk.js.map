{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetfilxOriginals","fetchTopRated","fetchActionMovies","fetchAnimationMovies","fetchFantasyMovies","fetchMysteryMovies","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54048fd4.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n/** base url to make requests to the movie database */\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\n//instance.get('/foo-bar');\r\n// >> https://api.themoviedb.org/3/foo-bar\r\n\r\nexport default instance;","import React, { useState, useEffect } from 'react';\r\nimport axios from './axios';\r\nimport './Row.css';\r\nimport YouTube from 'react-youtube';\r\nimport movieTrailer from 'movie-trailer';\r\n\r\nconst base_url = 'https://image.tmdb.org/t/p/original/';\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerUrl, setTrailerUrl] = useState('');\r\n\r\n  // A snippet of code which runs based on a specific condition\r\n  useEffect(() => {\r\n    // if []. run once when the row loads, and dont run again\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      setMovies(request.data.results);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]); //dependent on fetchUrl(which came outside of useEffect function)\r\n  // there are so many requests and each of those fetchUrls will make this function run\r\n  const opts = {\r\n    height: '390',\r\n    width: '100%',\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n\r\n  const handleClick = (movie) => {\r\n    if (trailerUrl) {\r\n      setTrailerUrl('');\r\n    } else {\r\n      movieTrailer(movie?.name || '')\r\n        .then((url) => {\r\n          //https://www.youtube.com/watch?v=NxSDNogkKX0\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          setTrailerUrl(urlParams.get('v')); // \"NxSDNogkKX0\"\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n\r\n      <div className=\"row__posters\">\r\n        {movies.map((movie) => (\r\n          <img\r\n            key={movie.id}\r\n            onClick={() => handleClick(movie)}\r\n            className={`row__poster ${isLargeRow && 'row__posterLarge'}`}\r\n            src={`${base_url}${\r\n              isLargeRow ? movie.poster_path : movie.backdrop_path\r\n            }`}\r\n            alt={movie.name}\r\n          />\r\n        ))}\r\n      </div>\r\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","// functional >> lower case , components >> upper case\r\nconst API_KEY = \"db537366400b54ae13f6cb2f07ce91cb\";\r\n\r\nconst requests = {\r\n    fetchTrending :`/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetfilxOriginals :`/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated :`/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies :`/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchAnimationMovies :`/discover/movie?api_key=${API_KEY}&with_genres=16`,\r\n    fetchFantasyMovies :`/discover/movie?api_key=${API_KEY}&with_genres=14`,\r\n    fetchMysteryMovies :`/discover/movie?api_key=${API_KEY}&with_genres=9648`,\r\n}\r\n\r\nexport default requests;","import React, { useState, useEffect } from 'react';\r\nimport axios from './axios';\r\nimport requests from './requests';\r\nimport './Banner.css';\r\n\r\nfunction Banner() {\r\n  const [movie, setMovie] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchAnimationMovies);\r\n      setMovie(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length - 1)\r\n        ]\r\n      );\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  function truncate(str, n) {\r\n    return str?.length > n ? str.substr(0, n - 1) + '...' : str;\r\n  }\r\n\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: 'cover',\r\n        backgroundImage: `url(\r\n                \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\r\n            )`,\r\n        backgroundPosition: 'center center',\r\n      }} // movie? is if movie is undefined it doesnt crash out it handles elegantly\r\n    >\r\n      <div className=\"banner__contents\">\r\n        <h1 className=\"banner__title\">\r\n          {movie?.title || movie?.name || movie?.original_name}\r\n        </h1>\r\n\r\n        <div className=\"banner__buttons\">\r\n          <button className=\"banner__button\">Play</button>\r\n          <button className=\"banner__button\">My List</button>\r\n        </div>\r\n\r\n        <h1 className=\"banner__description\">\r\n          {movie?.overview}\r\n          {truncate(movie?.overview, 150)}\r\n        </h1>\r\n      </div>\r\n\r\n      <div className=\"banner--fadeBottom\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Nav.css';\r\n\r\nfunction Nav() {\r\n  const [show, handleShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', () => {\r\n      if (window.scrollY > 100) {\r\n        handleShow(true);\r\n      } else handleShow(false);\r\n    });\r\n    return () => {\r\n      window.removeEventListener('scroll', () => {\r\n        if (window.scrollY > 100) {\r\n          handleShow(true);\r\n        } else handleShow(false);\r\n      });\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className={`nav ${show && 'nav__black'}`}>\r\n      <img\r\n        className=\"nav__logo\"\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\"\r\n        alt=\"Netflix Logo\"\r\n      />\r\n\r\n      <img\r\n        className=\"nav__avatar\"\r\n        src=\"https://a.ripple.moe/53212?0\"\r\n        alt=\"AVATAR\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react';\nimport './App.css';\nimport Row from './Row';\nimport requests from './requests';\nimport Banner from './Banner';\nimport Nav from './Nav';\n\nfunction App() {\n  // component based design\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Banner />\n\n      <Row\n        title=\"NETFLIX ORIGINALS\"\n        fetchUrl={requests.fetchNetfilxOriginals}\n        isLargeRow // isLargeRow = {true}\n      />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Animations\" fetchUrl={requests.fetchAnimationMovies} />\n      <Row title=\"Mystery Movies\" fetchUrl={requests.fetchMysteryMovies} />\n      <Row title=\"Fantasy Movies\" fetchUrl={requests.fetchFantasyMovies} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}